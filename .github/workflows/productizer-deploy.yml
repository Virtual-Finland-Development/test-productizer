# This workflow will build and deploy the python app with serverless framerwork
# @see: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
# @see: https://www.viget.com/articles/automating-build-deploy-ci-cd-with-github-actions/
name: Productizer Deploy

on:
  workflow_call:
  push:
    branches: ["main"]

permissions:
  contents: read

env:
  python-version: 3.9

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade awscli
          make install
      # deploy!
      - name: Deploy with pulumi
        run: |
          make deploy-pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          POETRY_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          POETRY_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          POETRY_AWS_REGION: ${{ secrets.AWS_REGION }}
          POETRY_AUTHORIZATION_GW_ENDPOINT_URL: ${{ secrets.AUTHORIZATION_GW_ENDPOINT_URL }}
