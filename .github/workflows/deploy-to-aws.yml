# This workflow will build and deploy the python app with serverless framerwork
# @see: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
# @see: https://www.viget.com/articles/automating-build-deploy-ci-cd-with-github-actions/
name: Productizer Deploy

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  use-build-and-test:
    # adapt to point to the current repo
    # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#calling-a-reusable-workflow
    uses: Virtual-Finland-Development/testbed-test-productizer/.github/workflows/build-and-test.yml@main
    # that's all - jobs that call a reusable workflow can do nothing else

  deploy:
    needs: use-build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Download the build artifact
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3
        with:
          # the same name as used in the build workflow
          name: build-artifact
          # where to save the artifact
          # using the same path as in the build workflow "restores" the state from the end of the build workflow
          path: .
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        run: npm ci
      # deploy!
      # https://github.com/serverless/github-action
      - name: Deploy with serverless framework
        uses: serverless/github-action@v3.1
        with:
          args: deploy --stage dev --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
