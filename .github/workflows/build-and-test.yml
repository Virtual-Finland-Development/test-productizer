# This workflow will install Python dependencies, run tests, lint and upload an artifact for the deployment phase
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# And for the deployment flow: https://www.viget.com/articles/automating-build-deploy-ci-cd-with-github-actions/

name: Build and test

on:
  schedule:
    - cron: "1 11 * * 2" # automaticly test once a week
  # support calling this workflow from other workflows
  # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#creating-a-reusable-workflow
  workflow_call:
  workflow_dispatch:
  # support running this workflow on push events
  # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
  push:
    branches-ignore:
      - main

permissions:
  contents: read

env:
  python-version: 3.9

jobs:
  build-and-test:
    name: "Build and test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade awscli
          make install
      - name: Run lint check with black
        run: |
          make lint-check
      - name: Test with pytest
        run: |
          make test
      # preview stac
      - name: Preview pulumi stack
        run: |
          make deploy-pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          POETRY_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          POETRY_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          POETRY_AWS_REGION: ${{ secrets.AWS_REGION }}
          POETRY_AUTHORIZATION_GW_ENDPOINT_URL: ${{ secrets.AUTHORIZATION_GW_ENDPOINT_URL }}
